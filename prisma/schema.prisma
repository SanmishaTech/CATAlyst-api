generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id                Int       @id @default(autoincrement())
  name              String
  email             String    @unique
  password          String
  role              String    
  clientId          Int?      // For users: references their client
  active            Boolean   @default(true)
  lastLogin         DateTime?
  resetToken        String?
  resetTokenExpires DateTime?
  apiKey            String?   @unique
  apiKeyExpiry      DateTime?
  createdAt         DateTime  @default(now())
  updatedAt         DateTime  @updatedAt
  
  // Relations
  client            Client?   @relation("ClientUsers", fields: [clientId], references: [id], onDelete: Cascade)
  batches           Batch[]
  orders            Order[]
  
  @@index([clientId])
  @@map("users")
}

model Client {
  id                            Int       @id @default(autoincrement())
  name                          String
  entityName                    String?
  address                       String?   @db.Text
  legalAddress                  String?   @db.Text
  taxOrEinNumber                String?
  mpid                          String?
  lei                           String?
  catReporterImid               String?
  catSubmitterImid              String?
  contactPersonName             String?
  contactNumber                 String?
  contactEmailId                String?
  serviceEmailId                String?
  catEnabled                    Boolean   @default(false)
  sixZeroFiveEnabled            Boolean   @default(false)
  loprEnabled                   Boolean   @default(false)
  supportEscalationContact      String?
  dataSpecificationModel        String?   // Enum stored as string
  configurationPlaceholder      String?   // Enum stored as string
  configurationPlaceholder1     String?   // Enum stored as string
  configurationPlaceholder2     String?   // Enum stored as string
  placeholderColumn1            String?
  placeholderColumn2            String?
  placeholderColumn3            String?
  placeholderColumn4            String?
  placeholderColumn5            String?
  placeholderColumn6            String?
  placeholderColumn7            String?
  active                        Boolean   @default(true)
  createdAt                     DateTime  @default(now())
  updatedAt                     DateTime  @updatedAt
  
  // Relations
  users                         User[]    @relation("ClientUsers")
  
  @@map("clients")
}

model Batch {
  id                Int       @id @default(autoincrement())
  userId            Int
  fileName          String
  fileSize          Int?
  totalOrders       Int       @default(0)
  successfulOrders  Int       @default(0)
  failedOrders      Int       @default(0)
  status            String    @default("processing") // processing, completed, failed
  errorLog          String?   @db.Text
  importedAt        DateTime  @default(now())
  completedAt       DateTime?
  createdAt         DateTime  @default(now())
  updatedAt         DateTime  @updatedAt
  
  // Relations
  user              User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  orders            Order[]
  
  @@index([userId])
  @@map("batches")
}

model Order {
  id                              Int       @id @default(autoincrement())
  userId                          Int
  batchId                         Int
  clientId                        String?
  
  // Excel fields (101 total)
  orderId                         String?
  orderIdVersion                  Int?
  orderIdSession                  Int?
  orderIdInstance                 String?
  parentOrderId                   String?
  cancelreplaceOrderId            String?
  linkedOrderId                   String?
  orderAction                     String?
  orderStatus                     String?
  orderCapacity                   Int?
  orderDestination                Int?
  orderClientRef                  Int?
  orderClientRefDetails           Int?
  orderExecutingEntity            String?
  orderBookingEntity              String?
  orderPositionAccount            String?
  orderSide                       String?
  orderClientCapacity              String?
  orderManualIndicator             String?
  orderRequestTime                 String?
  orderEventTime                  String?
  orderManualTimestamp            String?
  orderOmsSource                  String?
  orderPublishingTime             String?
  orderTradeDate                  String?
  orderQuantity                   Decimal?  @db.Decimal(18, 8)
  orderPrice                      Decimal?  @db.Decimal(18, 8)
  orderType                       String?
  orderTimeInforce                String?
  orderExecutionInstructions      String?
  orderAttributes                 String?
  orderRestrictions               String?
  orderAuctionIndicator           String?
  orderSwapIndicator              String?
  orderOsi                        String?
  orderInstrumentId               String?
  orderLinkedInstrumentId         String?
  orderCurrencyId                 String?
  orderFlowType                   String?
  orderAlgoInstruction            String?
  orderSymbol                     String?
  orderInstrumentReference        String?
  orderInstrumentReferenceValue   String?
  orderOptionPutCall              String?
  orderOptionStrikePrice          Decimal?  @db.Decimal(18, 8)
  orderOptionLegIndicator         String?
  orderComplianceId               String?
  orderEntityId                   String?
  orderExecutingAccount           String?
  orderClearingAccount            String?
  orderClientOrderId              String?
  orderRoutedOrderId              String?
  orderTradingOwner               String?
  orderExtendedAttribute          String?   @db.Text
  orderQuoteId                    String?
  orderRepresentOrderId           String?
  orderOnBehalfCompId             String?
  orderSpread                     String?
  orderAmendReason                String?
  orderCancelRejectReason         String?
  orderBidSize                    Decimal?  @db.Decimal(18, 8)
  orderBidPrice                   Decimal?  @db.Decimal(18, 8)
  orderAskSize                    Decimal?  @db.Decimal(18, 8)
  orderAskPrice                   Decimal?  @db.Decimal(18, 8)
  orderBasketId                   String?
  orderCumQty                     Decimal?  @db.Decimal(18, 8)
  orderLeavesQty                  Decimal?  @db.Decimal(18, 8)
  orderStopPrice                  Decimal?  @db.Decimal(18, 8)
  orderDiscretionPrice            Decimal?  @db.Decimal(18, 8)
  orderExdestinationInstruction   String?
  orderExecutionParameter         String?
  orderInfobarrierId              String?
  orderLegRatio                   String?
  orderLocateId                   String?
  orderNegotiatedIndicator        String?
  orderOpenClose                  String?
  orderParticipantPriorityCode    String?
  orderActionInitiated            String?
  orderPackageIndicator           String?
  orderPackageId                  String?
  orderPackagePricetype           String?
  orderStrategyType                String?
  orderSecondaryOffering          String?
  orderStartTime                   String?
  orderTifExpiration              String?
  orderParentChildType            String?
  orderMinimumQty                 Decimal?  @db.Decimal(18, 8)
  orderTradingSession             String?
  orderDisplayPrice               Decimal?  @db.Decimal(18, 8)
  orderSeqNumber                  String?
  atsDisplayIndicator             String?
  orderDisplayQty                 Decimal?  @db.Decimal(18, 8)
  orderWorkingPrice               Decimal?  @db.Decimal(18, 8)
  atsOrderType                    String?
  orderNbboSource                 String?
  orderNbboTimestamp              String?
  orderSolicitationFlag           String?
  orderNetPrice                   Decimal?  @db.Decimal(18, 8)
  routeRejectedFlag               String?
  orderOriginationSystem          String?
  
  createdAt                       DateTime  @default(now())
  updatedAt                       DateTime  @updatedAt
  
  // Relations
  user                            User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  batch                           Batch     @relation(fields: [batchId], references: [id], onDelete: Cascade)
  
  @@index([userId])
  @@index([batchId])
  @@index([orderId])
  @@map("orders")
}

